import requests

import openmeteo_requests

import requests_cache
import pandas as pd
from retry_requests import retry

def pogoda(city, lat, long):
# Setup the Open-Meteo API client with cache and retry on error
cache_session = requests_cache.CachedSession('.cache', expire_after = -1)
retry_session = retry(cache_session, retries = 5, backoff_factor = 0.2)
openmeteo = openmeteo_requests.Client(session = retry_session)

# Make sure all required weather variables are listed here
# The order of variables in hourly or daily is important to assign them correctly below
url = "https://archive-api.open-meteo.com/v1/archive"
params = {
    "latitude": 43.07,
    "longitude": 131.54,
    "start_date": "2017-01-01",
    "end_date": "2023-11-23",
    "hourly": ["temperature_2m", "wind_speed_10m", "wind_speed_100m"]
}
responses = openmeteo.weather_api(url, params=params)

# Process first location. Add a for-loop for multiple locations or weather models
response = responses[0]
print(f"Coordinates {response.Latitude()}°E {response.Longitude()}°N")
print(f"Elevation {response.Elevation()} m asl")
print(f"Timezone {response.Timezone()} {response.TimezoneAbbreviation()}")
print(f"Timezone difference to GMT+0 {response.UtcOffsetSeconds()} s")

# Process hourly data. The order of variables needs to be the same as requested.
hourly = response.Hourly()
hourly_temperature_2m = hourly.Variables(0).ValuesAsNumpy()
hourly_wind_speed_10m = hourly.Variables(1).ValuesAsNumpy()
hourly_wind_speed_100m = hourly.Variables(2).ValuesAsNumpy()

hourly_data = {"date": pd.date_range(
    start = pd.to_datetime(hourly.Time(), unit = "s"),
    end = pd.to_datetime(hourly.TimeEnd(), unit = "s"),
    freq = pd.Timedelta(seconds = hourly.Interval()),
    inclusive = "left"
)}
hourly_data["temperature_2m"] = hourly_temperature_2m
hourly_data["wind_speed_10m"] = hourly_wind_speed_10m
hourly_data["wind_speed_100m"] = hourly_wind_speed_100m

df = pd.DataFrame(data = hourly_data)
df = df.drop(columns=['Unnamed: 0'], axis=1)
df.drop(df.index[60408:], inplace=True)
df['date'] = pd.to_datetime(df['date'])
df['year'] = df['date'].dt.year
df['month'] = df['date'].dt.month
df['city'] = city
weather = df.groupby(['city', 'year', 'month']).agg(
  {'temperature_2m': 'mean', 'wind_speed_10m': 'mean', 'wind_speed_100m': 'mean'})
weather.to_csv(f'{city}.csv')
  #hourly_dataframe.to_csv('hourly_dataframe.csv')
  #print(hourly_dataframe)


geocodes = {}


def get_geocode(address='Москва, Ленинские горы, 1'):
	if address not in geocodes:
		response = requests.get('https://geocode-maps.yandex.ru/1.x/',
					   params={'apikey': '77a0da49-2f40-48b5-b114-4a0aca951d86',
							   'format': 'json',
							   'geocode': address}).json()

		geocodes[address] = ','.join(
			response['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['Point']['pos'].split()[::-1])

	return geocodes[address]


citis = [
  "Благовещенск",
  "Сковородино",
  "Константиновка",
  "Новокиевский Увал",
  "Зея",
  "Новобурейский",
  "Райчихинск",
  "Свободный",
  "Тында",
  "Магдагачи",
  "Облучье",
  "Биробиджан",
  "Петропавловск-Камчатский",
  "Ключи",
  "Тиличики",
  "Мильково",
  "Палана",
  "Эссо",
  "Усть-Большерецк",
  "Усть-Камчатск",
  "Оссора",
  "Тигиль",
  "Соболево",
  "Вилючинск",
  "Петропавловаск-Камчатский",
  " Ключи",
  "Паратунка",
  "Магадан",
  "Ягодное",
  "Омсукчан",
  "Палатка",
  "Ола",
  "Сусуман",
  "Сеймчан",
  "Усть-Омчуг",
  "Владивосток",
  "Вольно-Надеждинское",
  "г.Уссурийск",
  "Михайловка",
  "Уссурийск",
  "Партизанск",
  "Владимиро-Александровское",
  "Лазо",
  "Чугуевка",
  "Арсеньев",
  "Анучино",
  "Яковлевка",
  "Камень-Рыболов Ханкайского района",
  "Хороль",
  "Спасск-Дальний",
  "Дальнереченск",
  "Славянка Хасанского района",
  "Ольга",
  "Дальнегорск",
  "Лесозаводск",
  "Кировский",
  "Лучегорск",
  "Партизанск - линия электропередач",
  "Находка",
  "Артем",
  "Кировский Кировского района",
  "Санаторий имени 50-летия Октября",
  "курортный поселок Горные Ключи Кировского района",
  "Якутск",
  "Амга",
  "Батагай",
  "Бердигестях",
  "Борогонцы",
  "Вилюйск",
  "Ленск",
  "Нюрба",
  "Олекминск",
  "Покровск",
  "Сангар",
  "Усть-Нера",
  "Хандыга",
  "Черский",
  "Тикси",
  "Зырянка",
  "Депутатский",
  "Алдан",
  "Чурапча",
  "Нерюнгри",
  "лдан",
  "Южно-Сахалинск",
  "Томари",
  "Южно-Курильск",
  "Углегорск",
  "Курильск",
  "Северо-Курильск",
  "Холмск",
  "Поронайск",
  "Долинск",
  "Тымовское",
  "Оха",
  "Александровск-Сахалинский",
  "Макаров",
  "Ноглики.",
  "Корсаков",
  "Смирных",
  "Хабаровск",
  "Чегдомын",
  "Советская Гавань",
  "Комсомольск-на-Амуре",
  " Хабаровск",
  "Троицкое",
  "абаровск",
  "Хабаровская Банковская школа (колледж)",
  "Анадырь",
  "Тавайваам",
  "Певек",
  "Лаврентия",
  "Провидения",
  "Эгвекинот",
  "Беринговский",
  "Иультинский",
  "Билибино"
]
kords = {'Благовещенск': '50.257456,127.534611', 'Сковородино': '53.987177,123.943641', 'Константиновка': '48.514069,37.687129',
         'Новокиевский Увал': '51.658808,128.917712', 'Зея': '53.734038,127.265889', 'Новобурейский': '49.79869,129.873447',
         'Райчихинск': '49.794114,129.411255', 'Свободный': '51.375889,128.134156', 'Тында': '55.149666,124.73644',
         'Магдагачи': '53.453548,125.810726', 'Облучье': '49.020287,131.05969', 'Биробиджан': '48.78992,132.924746',
         'Петропавловск-Камчатский': '53.024265,158.643503', 'Ключи': '52.253089,79.168041', 'Тиличики': '60.428326,166.055637', 'Мильково': '54.692932,158.623354', 'Палана': '59.082834,159.951307', 'Эссо': '55.927538,158.700986', 'Усть-Большерецк': '52.824094,156.281087', 'Усть-Камчатск': '56.239683,162.536137', 'Оссора': '59.25147,163.07456', 'Тигиль': '57.758422,158.679705', 'Соболево': '54.298858,155.946087', 'Вилючинск': '52.93179,158.405063', 'Петропавловаск-Камчатский': '53.024265,158.643503', ' Ключи': '52.253089,79.168041', 'Паратунка': '52.962327,158.254245', 'Магадан': '59.565155,150.808586', 'Ягодное': '53.610925,49.039328', 'Омсукчан': '62.514289,155.785028', 'Палатка': '60.101652,150.934781', 'Ола': '59.579488,151.295051', 'Сусуман': '62.779444,148.151657', 'Сеймчан': '62.926227,152.404775', 'Усть-Омчуг': '61.133627,149.633239', 'Владивосток': '43.115542,131.885494', 'Вольно-Надеждинское': '43.37094,131.993049', 'г.Уссурийск': '43.797247,131.952122', 'Михайловка': '50.07938,43.23445', 'Уссурийск': '43.797247,131.952122', 'Партизанск': '43.11982,133.123255', 'Владимиро-Александровское': '42.8908,133.077172', 'Лазо': '47.703276,136.43176', 'Чугуевка': '44.158533,133.860072', 'Арсеньев': '44.163345,133.268729', 'Анучино': '43.964007,133.054408', 'Яковлевка': '44.426467,133.475503', 'Камень-Рыболов Ханкайского района': '44.740061,132.042187', 'Хороль': '44.420196,132.077095', 'Спасск-Дальний': '44.597647,132.817568', 'Дальнереченск': '45.931182,133.726941', 'Славянка Хасанского района': '42.860686,131.392516', 'Ольга': '43.743346,135.285132', 'Дальнегорск': '44.558764,135.576366', 'Лесозаводск': '45.464809,133.398221', 'Кировский': '54.956777,82.921139', 'Лучегорск': '46.444827,134.303785', 'Партизанск - линия электропередач': '43.11982,133.123255', 'Находка': '42.824043,132.89282', 'Артем': '43.353047,132.180339', 'Кировский Кировского района': '45.090005,133.504824', 'Санаторий имени 50-летия Октября': '55.684818,37.50195', 'курортный поселок Горные Ключи Кировского района': '45.233489,133.503503', 'Якутск': '62.027221,129.732178', 'Амга': '60.896972,131.987057', 'Батагай': '67.656157,134.636099', 'Бердигестях': '62.096978,126.699753', 'Борогонцы': '62.671375,131.16889', 'Вилюйск': '63.7549,121.623607', 'Ленск': '60.713735,114.911853', 'Нюрба': '63.278463,118.336617', 'Олекминск': '60.372981,120.403084', 'Покровск': '61.48424,129.148228', 'Сангар': '63.923465,127.466429', 'Усть-Нера': '64.570729,143.231162', 'Хандыга': '62.653533,135.563053', 'Черский': '68.755809,161.323816', 'Тикси': '71.639263,128.870855', 'Зырянка': '65.736271,150.890458', 'Депутатский': '69.340816,139.950532', 'Алдан': '58.608597,125.388878', 'Чурапча': '61.996629,132.440572', 'Нерюнгри': '56.657717,124.712311', 'лдан': '50.517282,32.586234', 'Южно-Сахалинск': '46.957771,142.729587', 'Томари': '47.761063,142.063532', 'Южно-Курильск': '44.026063,145.863297', 'Углегорск': '49.079433,142.063343', 'Курильск': '45.22829,147.875506', 'Северо-Курильск': '50.668701,156.115734', 'Холмск': '47.040819,142.042017', 'Поронайск': '49.221421,143.100852', 'Долинск': '47.324133,142.79821', 'Тымовское': '50.84784,142.657246', 'Оха': '53.588974,142.949163', 'Александровск-Сахалинский': '50.895768,142.158915', 'Макаров': '48.622695,142.781807', 'Ноглики.': '51.812203,143.153062', 'Корсаков': '46.63498,142.782579', 'Смирных': '49.742866,142.831358', 'Хабаровск': '48.480229,135.071917', 'Чегдомын': '51.133904,133.035948', 'Советская Гавань': '48.966446,140.285128', 'Комсомольск-на-Амуре': '50.550055,137.008685', ' Хабаровск': '48.480229,135.071917', 'Троицкое': '54.866073,73.302276', 'абаровск': '48.480229,135.071917', 'Хабаровская Банковская школа (колледж)': '53.100032,105.00251', 'Анадырь': '64.735814,177.518913', 'Тавайваам': '64.72524,177.529702', 'Певек': '69.702974,170.274369', 'Лаврентия': '65.584903,-171.01105', 'Провидения': '64.427407,-173.21892', 'Эгвекинот': '68.08756,177.339555', 'Беринговский': '63.061682,179.258312', 'Иультинский': '68.08756,177.339555', 'Билибино': '68.057129,166.451139'}




	# for city in citis:
	# 	kords[city] = get_geocode(city)
	# print(kords)
